import React, { useEffect, useState } from 'react';
import {
  Button, Container, Paper, Table, TableBody, TableCell, TableContainer, TableRow, TextField, Typography,
} from '@material-ui/core';
import { WhatsApp } from '@material-ui/icons';
import axios from 'axios';
import { useSnackbar } from 'notistack';

import useStyles from './AllDataStyles';

export interface BillData {
  id: number;
  address: string;
  branch: string;
  comboPack: string;
  dateOfBirth: string;
  firstName: string;
  note: string;
  paidAmount: number;
  paymentMode: string;
  pendingAmount: number;
  phone: string;
  price: number;
  comboPrice: number;
  qty: number;
  status: string;
  deliveryDate: string;
  deliveryStatus: string;
  deliveryCharges: string;
}

const AllData = () => {
  const classes = useStyles();
  const { enqueueSnackbar } = useSnackbar();
  const [data, setData] = useState<BillData[]>([]);
  const [loading, setLoading] = useState(true);
  const [searchTerm, setSearchTerm] = useState('');

  useEffect(() => {
    const fetchData = async () => {
      try {
        const response = await axios.get('https://gunjalpatilserver.onrender.com/data');
        setData(response.data);
        enqueueSnackbar('Data fetched successfully', { variant: 'success' });
      } catch (error) {
        enqueueSnackbar('Failed to fetch data', { variant: 'error' });
      } finally {
        setLoading(false);
      }
    };
    fetchData();
  }, [enqueueSnackbar]);

  const filteredData = data.filter((item) => {
    const { phone, firstName, id } = item;
    const normalizedPhone = String(phone);

    // Check if firstName is a string before calling toLowerCase
    const normalizedFirstName = typeof firstName === 'string' ? firstName.toLowerCase() : '';

    // Check for null, undefined, or empty values
    return (
      normalizedPhone.includes(searchTerm) ||
      normalizedFirstName.includes(searchTerm.toLowerCase()) ||
      String(id).includes(searchTerm)
    );
  });



  const handleWhatsAppClick = async (item: BillData) => {
    if (item.phone) {
      const formattedDateOfBirth = item.dateOfBirth ? new Date(item.dateOfBirth).toLocaleDateString('en-GB', { day: '2-digit', month: 'short', year: 'numeric' }) : '';
      const formattedDeliveryDate = item.deliveryDate ? new Date(item.deliveryDate).toLocaleDateString('en-GB', { day: '2-digit', month: 'short', year: 'numeric' }) : '';

      const today = new Date().toLocaleDateString('mr-IN', {
        day: 'numeric',
        month: 'long',
        year: 'numeric',
      });

      const message = `
        *рдЧреБрдВрдЬрд╛рд│ рдкрд╛рдЯреАрд▓ рднреЗрд│ рд╡ рдорд┐рд╕рд│*
      
        рдкрддреНрддрд╛:
        58/2, рдЧреБрдВрдЬрд╛рд│ рдкрд╛рдЯреАрд▓ рдХреЙрд░реНрдирд░,
        рдЬрд╛рдЦреБрд░реА, рддрд╛. рд╕рдВрдЧрдордиреЗрд░, рдЬрд┐. рдЕрд╣рд┐рд▓реНрдпрд╛рдирдЧрд░. 422605
        рд╕рдВрдкрд░реНрдХ рдХреНрд░рдорд╛рдВрдХ: 
        8888147262 , 9923469913
      
        *рдкреНрд░рд┐рдп рд╕рд░/рдореЕрдбрдо*,
      
        рдЖрдкрд▓реНрдпрд╛ рджрд┐рд╡рд╛рд│реАрдЪреНрдпрд╛ рдлрд░рд╛рд│рд╛рдЪреА рдпрд╢рд╕реНрд╡реА рдбрд┐рд▓рд┐рд╡реНрд╣рд░реА рдЭрд╛рд▓реНрдпрд╛рдмрджреНрджрд▓ рдордирдГрдкреВрд░реНрд╡рдХ рдзрдиреНрдпрд╡рд╛рдж! ЁЯЩП 
        рдЖрдкрд▓реНрдпрд╛ рдСрд░реНрдбрд░рдЪреЗ рдмрд┐рд▓ рддрдкрд╛рд╕рдгреНрдпрд╛рд╕рд╛рдареА рдХреГрдкрдпрд╛ рдЦрд╛рд▓реАрд▓ рдорд╛рд╣рд┐рддреА рдкрд╣рд╛:
      
        ${formattedDateOfBirth ? 'рддрд╛рд░реАрдЦ: ' + formattedDateOfBirth : ''}
        рдмрд┐рд▓ рдХреНрд░рдорд╛рдВрдХ: ${item.id}
        *рдЧреНрд░рд╛рд╣рдХрд╛рдЪреЗ рдирд╛рд╡: ${item.firstName}*
        рд╕рдВрдкрд░реНрдХ рдХреНрд░рдорд╛рдВрдХ: ${item.phone}
      
        рдСрд░реНрдбрд░ рддрдкрд╢реАрд▓:
      
        ${item.comboPack} Combo Pack
        рдирдЧ: ${item.qty}
        рдХрд┐рдВрдордд: ${item.comboPrice}/- рд░реБрдкрдпреЗ
        ${parseFloat(item.deliveryCharges) > 0 ? 'рдбрд┐рд▓рд┐рд╡реНрд╣рд░реА рдЪрд╛рд░реНрдЬреЗрд╕: ' + item.deliveryCharges + '/- рд░реБрдкрдпреЗ' : ''} 
      
        *рдПрдХреВрдг рд░рдХреНрдХрдо: ${item.price}/- рд░реБрдкрдпреЗ*
      
        рдЬрдорд╛ рд░рдХреНрдХрдо: ${item.paidAmount}/- рд░реБрдкрдпреЗ
        
        *рд╢рд┐рд▓реНрд▓рдХ рд░рдХреНрдХрдо: ${item.pendingAmount}/- рд░реБрдкрдпреЗ*
      
        рдЕрднрд┐рдирдВрджрди ${item.firstName}, рдЖрдкрд▓реА рджрд┐рд╡рд╛рд│реА рдлрд░рд╛рд│рд╛рдЪреА рдмреБрдХрд┐рдВрдЧ рдпрд╢рд╕реНрд╡реАрд░рд┐рддреНрдпрд╛ рдкреВрд░реНрдг рдЭрд╛рд▓реА рдЖрд╣реЗ.
        рдЖрдЬрдЪреА рддрд╛рд░реАрдЦ: ${today}
      
        рдХреГрдкрдпрд╛ рдЖрдкрд▓реНрдпрд╛ рдЕрдиреБрднрд╡рд╛рдмрджреНрджрд▓ рдЖрдореНрд╣рд╛рд▓рд╛ рдЕрднрд┐рдкреНрд░рд╛рдп рджреНрдпрд╛. рдЖрдкрд▓реЗ рдордд рдЖрдордЪреНрдпрд╛рд╕рд╛рдареА рдорд╣рддреНрд╡рд╛рдЪреЗ рдЖрд╣реЗ! ЁЯЩП
      
        рдЖрдордЪреНрдпрд╛ рд╕реЗрд╡рд╛рдВрдЪрд╛ рд▓рд╛рдн рдШреЗрддрд▓реНрдпрд╛рдмрджреНрджрд▓ рдЖрдкрд▓реЗ рдордирдГрдкреВрд░реНрд╡рдХ рдЖрднрд╛рд░..! ЁЯЩП 
      
        ЁЯкФЁЯкФЁЯкФ рдЖрдкрдгрд╛рд╕ рдЖрдгрд┐ рдЖрдкрд▓реНрдпрд╛ рд╕рдВрдкреВрд░реНрдг рдкрд░рд┐рд╡рд╛рд░рд╛рд▓рд╛ рджрд┐рд╡рд╛рд│реАрдЪреНрдпрд╛ рдЦреВрдк рдЦреВрдк рд╢реБрднреЗрдЪреНрдЫрд╛! ЁЯкФЁЯкФЁЯкФ
      
        рдЖрджрд░рдкреВрд░реНрд╡рдХ,
        *рдЧреБрдВрдЬрд╛рд│ рдкрд╛рдЯреАрд▓ рднреЗрд│ рд╡ рдорд┐рд╕рд│*
        
        рдЖрдордЪреНрдпрд╛рдмрджреНрджрд▓ рдЕрдзрд┐рдХ рдЬрд╛рдгреВрди рдШреЗрдгреНрдпрд╛рд╕рд╛рдареА рдЦрд╛рд▓реАрд▓ рд▓рд┐рдВрдХрд╡рд░ рдХреНрд▓рд┐рдХ рдХрд░реВрди рдЖрдордЪреНрдпрд╛ рд╡реНрд╣реЙрдЯреНрд╕рдНрдк рдЧреНрд░реБрдкрд▓рд╛ рдЬреЙрдИрди рдХрд░рд╛.
        https://chat.whatsapp.com/L52wkjvPjkMCNhGldT9Fdb
      
        рддрд╕реЗрдЪ рдЖрдордЪреНрдпрд╛ рдЗрдВрд╕реНрдЯрд╛рдЧреНрд░рд╛рдо рдкреЗрдЬрд▓рд╛ рдлреЙрд▓реЛ рдХрд░рд╛.
        https://www.instagram.com/gunjal_patil_bhel_and_misal/profilecard/?igsh=YzE3a2hqcGh4OW40
      `;


      const url = `https://api.whatsapp.com/send?phone=+91${item.phone}&text=${encodeURIComponent(message)}`;
      window.open(url, '_blank');
    }
  };

  return (
    <div style={{ width: '-webkit-fill-available', padding: '10px' }}>
      <TextField
        className={classes.searchField}
        label="Search by Name, Mobile Number, or ID"
        variant="outlined"
        value={searchTerm}
        onChange={(e) => setSearchTerm(e.target.value)}
        fullWidth
        style={{ marginBottom: '20px' }}
      />
      {loading ? (
        <Typography variant="h6">Loading...</Typography>
      ) : (
        <TableContainer style={{ maxWidth: '100%' }} component={Paper}>
          <Table style={{ width: '100%' }}>
            <TableBody>
              {filteredData.map((item) => (
                <TableRow key={item.id} style={{
                  backgroundColor: item.pendingAmount > 0 ? '#f7ead7' : item.pendingAmount === 0 ? '#e6fae9' : 'transparent',
                  borderBottom: '1px solid #ccc',
                }}>
                  <TableCell style={{ border: '1px solid #ccc' }}>{item.id}</TableCell>
                  <TableCell style={{ border: '1px solid #ccc' }}>{item.firstName}</TableCell>
                  <TableCell style={{ border: '1px solid #ccc' }}>{item.phone}</TableCell>
                  <TableCell style={{ border: '1px solid #ccc' }}>{item.address}</TableCell>
                  <TableCell style={{ border: '1px solid #ccc' }}>{item.comboPack}</TableCell>
                  <TableCell style={{ border: '1px solid #ccc' }}>{item.comboPrice}</TableCell>
                  <TableCell style={{ border: '1px solid #ccc' }}>{item.qty}</TableCell>
                  <TableCell style={{ border: '1px solid #ccc' }}>{item.deliveryCharges}</TableCell>
                  <TableCell style={{ border: '1px solid #ccc' }}>{item.price}</TableCell>
                  <TableCell style={{ border: '1px solid #ccc' }}>{item.paidAmount}</TableCell>
                  <TableCell style={{ border: '1px solid #ccc' }}>{item.pendingAmount}</TableCell>
                  <TableCell style={{ border: '1px solid #ccc' }}>{item.paymentMode}</TableCell>
                  <TableCell style={{ border: '1px solid #ccc' }}>{item.branch}</TableCell>
                  <TableCell style={{ border: '1px solid #ccc' }}>{item.note}</TableCell>
                  <TableCell style={{ border: '1px solid #ccc' }}>{item.status}</TableCell>
                  <TableCell style={{ border: '1px solid #ccc' }}>
                    {item.deliveryDate ? new Date(item.deliveryDate).toLocaleDateString('en-GB', { day: '2-digit', month: 'short', year: 'numeric' }) : ''}
                  </TableCell>
                  <TableCell style={{ border: '1px solid #ccc' }}>{item.deliveryStatus}</TableCell>
                  <TableCell style={{ border: '1px solid #ccc' }}>
                    <Button
                      variant="contained"
                      startIcon={<WhatsApp />}
                      onClick={() => handleWhatsAppClick(item)}
                      style={{ marginLeft: '10px' }}
                    >
                      Send via WhatsApp
                    </Button>
                  </TableCell>
                </TableRow>
              ))}
            </TableBody>
          </Table>
        </TableContainer>
      )}
    </div>
  );
};


export default AllData;
